version: "3.0"
services:
  gzctf:
    image: gztime/gzctf:latest
    restart: always
    environment:
      - "LC_ALL=en_US.UTF-8"
    ports:
      - "8080:8080"
    privileged: true
    userns_mode: host
    volumes:
      - "gzctf-files:/app/files"
      - "./appsettings.json:/app/appsettings.json:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - db
      - cache
    networks:
      - traefik
      - default
    labels:
        - "traefik.enable=true"
        - "traefik.http.services.gzctf.loadbalancer.server.port=8080"
        # HTTPS router
        - "traefik.http.routers.https.rule=Host(`{{.PublicEntry}}`)"
        - "traefik.http.routers.https.entrypoints=websecure"
        - "traefik.http.routers.https.tls.certresolver=letsencrypt"
        - "traefik.http.routers.https.service=gzctf"
        # HTTP router
        - "traefik.http.routers.http.rule=Host(`{{.PublicEntry}}`)"
        - "traefik.http.routers.http.entrypoints=web"
        - "traefik.http.routers.http.service=gzctf"
         # Rate limit middleware
        # - "traefik.http.middlewares.gzctf-ratelimit.ratelimit.average=100"
        # - "traefik.http.middlewares.gzctf-ratelimit.ratelimit.burst=50"
        # - "traefik.http.routers.gzctf.middlewares=gzctf-ratelimit"
  gzctf-bot:
    build: bot
    restart: always
    environment:
      GZCTF_DISCORD_WEBHOOK: "{{.DiscordWebhook}}"
      POSTGRES_PASSWORD: postgres
  db:
    image: postgres:alpine
    restart: always
    environment:
      - "POSTGRES_PASSWORD=postgres"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"

  cache:
    image: redis:alpine
    restart: always

  traefik:
    image: traefik:v3.5
    restart: always
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=dimasmaulana0305@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - traefik
      - default
    depends_on:
      - gzctf

volumes:
  gzctf-files:
  postgres-data:

networks:
  traefik:
    external: true